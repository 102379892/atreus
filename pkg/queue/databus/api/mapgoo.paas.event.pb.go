// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mapgoo.paas.event.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Any from public import github.com/golang/protobuf/ptypes/any/any.proto
type Any = any.Any

//业务类型
type EM_BUSSI_TYPE int32

const (
	//默认值
	EM_BUSSI_TYPE_EM_BUSSITYPE_DEFAULT EM_BUSSI_TYPE = 0
	//用户事件
	EM_BUSSI_TYPE_EM_BUSSITYPE_USER EM_BUSSI_TYPE = 1
	//设备事件
	EM_BUSSI_TYPE_EM_BUSSITYPE_DEVICE EM_BUSSI_TYPE = 2
	//卡事件
	EM_BUSSI_TYPE_EM_BUSSITYPE_CARD EM_BUSSI_TYPE = 3
)

var EM_BUSSI_TYPE_name = map[int32]string{
	0: "EM_BUSSITYPE_DEFAULT",
	1: "EM_BUSSITYPE_USER",
	2: "EM_BUSSITYPE_DEVICE",
	3: "EM_BUSSITYPE_CARD",
}

var EM_BUSSI_TYPE_value = map[string]int32{
	"EM_BUSSITYPE_DEFAULT": 0,
	"EM_BUSSITYPE_USER":    1,
	"EM_BUSSITYPE_DEVICE":  2,
	"EM_BUSSITYPE_CARD":    3,
}

func (x EM_BUSSI_TYPE) String() string {
	return proto.EnumName(EM_BUSSI_TYPE_name, int32(x))
}

func (EM_BUSSI_TYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{0}
}

//类型子类
type EM_SUB_TYPE int32

const (
	//默认值
	EM_SUB_TYPE_EM_SUBTYPE_DEFAULT EM_SUB_TYPE = 0
	//app手机、微信公众号关注的注册、注销
	EM_SUB_TYPE_EM_SUBTYPE_USERREG EM_SUB_TYPE = 1
	//用户绑定、解绑
	EM_SUB_TYPE_EM_SUBTYPE_USERBIND EM_SUB_TYPE = 2
	//新版添加、卡变更
	EM_SUB_TYPE_EM_SUBTYPE_DEVICESELFREG EM_SUB_TYPE = 3
	//旧版添加、卡变更
	EM_SUB_TYPE_EM_SUBTYPE_DEVICEOLDSELFREG EM_SUB_TYPE = 4
	//web设备添加
	EM_SUB_TYPE_EM_SUBTYPE_DEVICEADD EM_SUB_TYPE = 5
	//web设备删除
	EM_SUB_TYPE_EM_SUBTYPE_DEVICEDEL EM_SUB_TYPE = 6
	//web设备转移
	EM_SUB_TYPE_EM_SUBTYPE_DEVICEMOVE EM_SUB_TYPE = 7
	//设备激活
	EM_SUB_TYPE_EM_SUBTYPE_DEVICEACTIVATE EM_SUB_TYPE = 8
	//设备续费
	EM_SUB_TYPE_EM_SUBTYPE_DEVICERENEWALS EM_SUB_TYPE = 9
	//设备过期
	EM_SUB_TYPE_EM_SUBTYPE_DEVICEEXPIRE EM_SUB_TYPE = 10
	//设备上线、离线
	EM_SUB_TYPE_EM_SUBTYPE_DEVICEONLINE EM_SUB_TYPE = 11
	//行程启动、熄火
	EM_SUB_TYPE_EM_SUBTYPE_DEVICETRAVEL EM_SUB_TYPE = 12
	//告警开始、结束
	EM_SUB_TYPE_EM_SUBTYPE_DEVICEALARM EM_SUB_TYPE = 13
	//行政区域变更
	EM_SUB_TYPE_EM_SUBTYPE_DEVICEREGION EM_SUB_TYPE = 14
	//直播开始、结束
	EM_SUB_TYPE_EM_SUBTYPE_DEVICELIVE EM_SUB_TYPE = 15
	//视频上报和图片上报
	EM_SUB_TYPE_EM_SUBTYPE_DEVICEMEDIA EM_SUB_TYPE = 16
	//人脸识别结果
	EM_SUB_TYPE_EM_SUBTYPE_DEVICERECOGNITION EM_SUB_TYPE = 17
	//acc状态变更
	EM_SUB_TYPE_EM_SUBTYPE_DEVICEACCSTATUS EM_SUB_TYPE = 18
	//卡实名
	EM_SUB_TYPE_EM_SUBTYPE_SIMREALNAME EM_SUB_TYPE = 19
	//卡续费
	EM_SUB_TYPE_EM_SUBTYPE_SIMRENEWALS EM_SUB_TYPE = 20
	//卡调档（删除）
	EM_SUB_TYPE_EM_SUBTYPE_SIMUPDATEMEAL EM_SUB_TYPE = 21
	//机卡分离
	EM_SUB_TYPE_EM_SUBTYPE_SIMSEPARATEDEVICE EM_SUB_TYPE = 22
	//卡变更
	EM_SUB_TYPE_EM_SUBTYPE_SIMMODIFY EM_SUB_TYPE = 23
)

var EM_SUB_TYPE_name = map[int32]string{
	0:  "EM_SUBTYPE_DEFAULT",
	1:  "EM_SUBTYPE_USERREG",
	2:  "EM_SUBTYPE_USERBIND",
	3:  "EM_SUBTYPE_DEVICESELFREG",
	4:  "EM_SUBTYPE_DEVICEOLDSELFREG",
	5:  "EM_SUBTYPE_DEVICEADD",
	6:  "EM_SUBTYPE_DEVICEDEL",
	7:  "EM_SUBTYPE_DEVICEMOVE",
	8:  "EM_SUBTYPE_DEVICEACTIVATE",
	9:  "EM_SUBTYPE_DEVICERENEWALS",
	10: "EM_SUBTYPE_DEVICEEXPIRE",
	11: "EM_SUBTYPE_DEVICEONLINE",
	12: "EM_SUBTYPE_DEVICETRAVEL",
	13: "EM_SUBTYPE_DEVICEALARM",
	14: "EM_SUBTYPE_DEVICEREGION",
	15: "EM_SUBTYPE_DEVICELIVE",
	16: "EM_SUBTYPE_DEVICEMEDIA",
	17: "EM_SUBTYPE_DEVICERECOGNITION",
	18: "EM_SUBTYPE_DEVICEACCSTATUS",
	19: "EM_SUBTYPE_SIMREALNAME",
	20: "EM_SUBTYPE_SIMRENEWALS",
	21: "EM_SUBTYPE_SIMUPDATEMEAL",
	22: "EM_SUBTYPE_SIMSEPARATEDEVICE",
	23: "EM_SUBTYPE_SIMMODIFY",
}

var EM_SUB_TYPE_value = map[string]int32{
	"EM_SUBTYPE_DEFAULT":           0,
	"EM_SUBTYPE_USERREG":           1,
	"EM_SUBTYPE_USERBIND":          2,
	"EM_SUBTYPE_DEVICESELFREG":     3,
	"EM_SUBTYPE_DEVICEOLDSELFREG":  4,
	"EM_SUBTYPE_DEVICEADD":         5,
	"EM_SUBTYPE_DEVICEDEL":         6,
	"EM_SUBTYPE_DEVICEMOVE":        7,
	"EM_SUBTYPE_DEVICEACTIVATE":    8,
	"EM_SUBTYPE_DEVICERENEWALS":    9,
	"EM_SUBTYPE_DEVICEEXPIRE":      10,
	"EM_SUBTYPE_DEVICEONLINE":      11,
	"EM_SUBTYPE_DEVICETRAVEL":      12,
	"EM_SUBTYPE_DEVICEALARM":       13,
	"EM_SUBTYPE_DEVICEREGION":      14,
	"EM_SUBTYPE_DEVICELIVE":        15,
	"EM_SUBTYPE_DEVICEMEDIA":       16,
	"EM_SUBTYPE_DEVICERECOGNITION": 17,
	"EM_SUBTYPE_DEVICEACCSTATUS":   18,
	"EM_SUBTYPE_SIMREALNAME":       19,
	"EM_SUBTYPE_SIMRENEWALS":       20,
	"EM_SUBTYPE_SIMUPDATEMEAL":     21,
	"EM_SUBTYPE_SIMSEPARATEDEVICE": 22,
	"EM_SUBTYPE_SIMMODIFY":         23,
}

func (x EM_SUB_TYPE) String() string {
	return proto.EnumName(EM_SUB_TYPE_name, int32(x))
}

func (EM_SUB_TYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{1}
}

//请求数据
type EventReq struct {
	//流水号
	Sequence uint64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	//时间戳
	Time uint64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	//业务类型
	BussiType EM_BUSSI_TYPE `protobuf:"varint,3,opt,name=bussi_type,json=bussiType,proto3,enum=mapgoo.event.EM_BUSSI_TYPE" json:"bussi_type,omitempty"`
	//类型子类
	SubType EM_SUB_TYPE `protobuf:"varint,4,opt,name=sub_type,json=subType,proto3,enum=mapgoo.event.EM_SUB_TYPE" json:"sub_type,omitempty"`
	//事件数据
	Details              *any.Any `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventReq) Reset()         { *m = EventReq{} }
func (m *EventReq) String() string { return proto.CompactTextString(m) }
func (*EventReq) ProtoMessage()    {}
func (*EventReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{0}
}

func (m *EventReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventReq.Unmarshal(m, b)
}
func (m *EventReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventReq.Marshal(b, m, deterministic)
}
func (m *EventReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventReq.Merge(m, src)
}
func (m *EventReq) XXX_Size() int {
	return xxx_messageInfo_EventReq.Size(m)
}
func (m *EventReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EventReq.DiscardUnknown(m)
}

var xxx_messageInfo_EventReq proto.InternalMessageInfo

func (m *EventReq) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *EventReq) GetTime() uint64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *EventReq) GetBussiType() EM_BUSSI_TYPE {
	if m != nil {
		return m.BussiType
	}
	return EM_BUSSI_TYPE_EM_BUSSITYPE_DEFAULT
}

func (m *EventReq) GetSubType() EM_SUB_TYPE {
	if m != nil {
		return m.SubType
	}
	return EM_SUB_TYPE_EM_SUBTYPE_DEFAULT
}

func (m *EventReq) GetDetails() *any.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

//一、用户事件
//1.用户注册、注销
//app手机、微信公众号关注的注册、注销
type UserRegEvent struct {
	//注册类型
	RegisterType uint32 `protobuf:"varint,1,opt,name=register_type,json=registerType,proto3" json:"register_type,omitempty"`
	//用户ID
	UserId uint32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//用户
	UserName uint32 `protobuf:"varint,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	//应用ID
	AppId string `protobuf:"bytes,4,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	//app名称
	AppName string `protobuf:"bytes,5,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	//微信唯一ID
	UnionId string `protobuf:"bytes,6,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`
	//手机号
	Mobile string `protobuf:"bytes,7,opt,name=mobile,proto3" json:"mobile,omitempty"`
	//app版本
	AppVersion string `protobuf:"bytes,8,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	//app用户id
	AndroidUserId string `protobuf:"bytes,9,opt,name=android_user_id,json=androidUserId,proto3" json:"android_user_id,omitempty"`
	//类型(0：注销，1：注册)
	OperType             uint32   `protobuf:"varint,10,opt,name=oper_type,json=operType,proto3" json:"oper_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRegEvent) Reset()         { *m = UserRegEvent{} }
func (m *UserRegEvent) String() string { return proto.CompactTextString(m) }
func (*UserRegEvent) ProtoMessage()    {}
func (*UserRegEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{1}
}

func (m *UserRegEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRegEvent.Unmarshal(m, b)
}
func (m *UserRegEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRegEvent.Marshal(b, m, deterministic)
}
func (m *UserRegEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRegEvent.Merge(m, src)
}
func (m *UserRegEvent) XXX_Size() int {
	return xxx_messageInfo_UserRegEvent.Size(m)
}
func (m *UserRegEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRegEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UserRegEvent proto.InternalMessageInfo

func (m *UserRegEvent) GetRegisterType() uint32 {
	if m != nil {
		return m.RegisterType
	}
	return 0
}

func (m *UserRegEvent) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserRegEvent) GetUserName() uint32 {
	if m != nil {
		return m.UserName
	}
	return 0
}

func (m *UserRegEvent) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *UserRegEvent) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *UserRegEvent) GetUnionId() string {
	if m != nil {
		return m.UnionId
	}
	return ""
}

func (m *UserRegEvent) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *UserRegEvent) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *UserRegEvent) GetAndroidUserId() string {
	if m != nil {
		return m.AndroidUserId
	}
	return ""
}

func (m *UserRegEvent) GetOperType() uint32 {
	if m != nil {
		return m.OperType
	}
	return 0
}

//2.用户绑定相关
//用户绑定、解绑
type UserBindEvent struct {
	//是否管理员
	IsAdmin bool `protobuf:"varint,1,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	//用户ID
	UserId uint32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	//设备ID
	ObjectId uint32 `protobuf:"varint,3,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	//设备imei
	Imei string `protobuf:"bytes,4,opt,name=imei,proto3" json:"imei,omitempty"`
	//sim卡号
	Iccid string `protobuf:"bytes,5,opt,name=iccid,proto3" json:"iccid,omitempty"`
	//类型(0：解绑，1：绑定)
	OperType             string   `protobuf:"bytes,6,opt,name=oper_type,json=operType,proto3" json:"oper_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserBindEvent) Reset()         { *m = UserBindEvent{} }
func (m *UserBindEvent) String() string { return proto.CompactTextString(m) }
func (*UserBindEvent) ProtoMessage()    {}
func (*UserBindEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{2}
}

func (m *UserBindEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserBindEvent.Unmarshal(m, b)
}
func (m *UserBindEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserBindEvent.Marshal(b, m, deterministic)
}
func (m *UserBindEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserBindEvent.Merge(m, src)
}
func (m *UserBindEvent) XXX_Size() int {
	return xxx_messageInfo_UserBindEvent.Size(m)
}
func (m *UserBindEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_UserBindEvent.DiscardUnknown(m)
}

var xxx_messageInfo_UserBindEvent proto.InternalMessageInfo

func (m *UserBindEvent) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

func (m *UserBindEvent) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserBindEvent) GetObjectId() uint32 {
	if m != nil {
		return m.ObjectId
	}
	return 0
}

func (m *UserBindEvent) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *UserBindEvent) GetIccid() string {
	if m != nil {
		return m.Iccid
	}
	return ""
}

func (m *UserBindEvent) GetOperType() string {
	if m != nil {
		return m.OperType
	}
	return ""
}

//二、设备事件
//1.设备自注册
//新版添加、卡变更
type DeviceSelfRegisterEvent struct {
	//设备id和imei
	DeviceId *DeviceId `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	//用户ID
	HoldId string `protobuf:"bytes,2,opt,name=hold_id,json=holdId,proto3" json:"hold_id,omitempty"`
	//终端类型ID
	MdtTypeId string `protobuf:"bytes,3,opt,name=mdt_type_id,json=mdtTypeId,proto3" json:"mdt_type_id,omitempty"`
	//IMEI号
	Imei string `protobuf:"bytes,4,opt,name=imei,proto3" json:"imei,omitempty"`
	//设备apk版本号
	ApkVersion string `protobuf:"bytes,5,opt,name=apk_version,json=apkVersion,proto3" json:"apk_version,omitempty"`
	//sim卡号
	Iccid string `protobuf:"bytes,6,opt,name=iccid,proto3" json:"iccid,omitempty"`
	//原IMEI号
	OrginalImei string `protobuf:"bytes,7,opt,name=orginal_imei,json=orginalImei,proto3" json:"orginal_imei,omitempty"`
	//apk产品类型
	AppKey               string   `protobuf:"bytes,8,opt,name=app_key,json=appKey,proto3" json:"app_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceSelfRegisterEvent) Reset()         { *m = DeviceSelfRegisterEvent{} }
func (m *DeviceSelfRegisterEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceSelfRegisterEvent) ProtoMessage()    {}
func (*DeviceSelfRegisterEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{3}
}

func (m *DeviceSelfRegisterEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceSelfRegisterEvent.Unmarshal(m, b)
}
func (m *DeviceSelfRegisterEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceSelfRegisterEvent.Marshal(b, m, deterministic)
}
func (m *DeviceSelfRegisterEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceSelfRegisterEvent.Merge(m, src)
}
func (m *DeviceSelfRegisterEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceSelfRegisterEvent.Size(m)
}
func (m *DeviceSelfRegisterEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceSelfRegisterEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceSelfRegisterEvent proto.InternalMessageInfo

func (m *DeviceSelfRegisterEvent) GetDeviceId() *DeviceId {
	if m != nil {
		return m.DeviceId
	}
	return nil
}

func (m *DeviceSelfRegisterEvent) GetHoldId() string {
	if m != nil {
		return m.HoldId
	}
	return ""
}

func (m *DeviceSelfRegisterEvent) GetMdtTypeId() string {
	if m != nil {
		return m.MdtTypeId
	}
	return ""
}

func (m *DeviceSelfRegisterEvent) GetImei() string {
	if m != nil {
		return m.Imei
	}
	return ""
}

func (m *DeviceSelfRegisterEvent) GetApkVersion() string {
	if m != nil {
		return m.ApkVersion
	}
	return ""
}

func (m *DeviceSelfRegisterEvent) GetIccid() string {
	if m != nil {
		return m.Iccid
	}
	return ""
}

func (m *DeviceSelfRegisterEvent) GetOrginalImei() string {
	if m != nil {
		return m.OrginalImei
	}
	return ""
}

func (m *DeviceSelfRegisterEvent) GetAppKey() string {
	if m != nil {
		return m.AppKey
	}
	return ""
}

//旧版添加、卡变更
type DeviceOldSelfRegisterEvent struct {
	//设备id和imei
	DeviceId *DeviceId `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	//用户ID
	HoldId uint32 `protobuf:"varint,2,opt,name=hold_id,json=holdId,proto3" json:"hold_id,omitempty"`
	//终端类型ID
	MdtTypeId uint32 `protobuf:"varint,3,opt,name=mdt_type_id,json=mdtTypeId,proto3" json:"mdt_type_id,omitempty"`
	//设备apk版本号
	ApkVersion string `protobuf:"bytes,4,opt,name=apk_version,json=apkVersion,proto3" json:"apk_version,omitempty"`
	//sim卡号
	Sim string `protobuf:"bytes,5,opt,name=sim,proto3" json:"sim,omitempty"`
	//是否变更
	IsModify uint32 `protobuf:"varint,6,opt,name=is_modify,json=isModify,proto3" json:"is_modify,omitempty"`
	//原IMEI号，不带其他字符
	OriginalImei         string   `protobuf:"bytes,7,opt,name=original_imei,json=originalImei,proto3" json:"original_imei,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceOldSelfRegisterEvent) Reset()         { *m = DeviceOldSelfRegisterEvent{} }
func (m *DeviceOldSelfRegisterEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceOldSelfRegisterEvent) ProtoMessage()    {}
func (*DeviceOldSelfRegisterEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{4}
}

func (m *DeviceOldSelfRegisterEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceOldSelfRegisterEvent.Unmarshal(m, b)
}
func (m *DeviceOldSelfRegisterEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceOldSelfRegisterEvent.Marshal(b, m, deterministic)
}
func (m *DeviceOldSelfRegisterEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceOldSelfRegisterEvent.Merge(m, src)
}
func (m *DeviceOldSelfRegisterEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceOldSelfRegisterEvent.Size(m)
}
func (m *DeviceOldSelfRegisterEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceOldSelfRegisterEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceOldSelfRegisterEvent proto.InternalMessageInfo

func (m *DeviceOldSelfRegisterEvent) GetDeviceId() *DeviceId {
	if m != nil {
		return m.DeviceId
	}
	return nil
}

func (m *DeviceOldSelfRegisterEvent) GetHoldId() uint32 {
	if m != nil {
		return m.HoldId
	}
	return 0
}

func (m *DeviceOldSelfRegisterEvent) GetMdtTypeId() uint32 {
	if m != nil {
		return m.MdtTypeId
	}
	return 0
}

func (m *DeviceOldSelfRegisterEvent) GetApkVersion() string {
	if m != nil {
		return m.ApkVersion
	}
	return ""
}

func (m *DeviceOldSelfRegisterEvent) GetSim() string {
	if m != nil {
		return m.Sim
	}
	return ""
}

func (m *DeviceOldSelfRegisterEvent) GetIsModify() uint32 {
	if m != nil {
		return m.IsModify
	}
	return 0
}

func (m *DeviceOldSelfRegisterEvent) GetOriginalImei() string {
	if m != nil {
		return m.OriginalImei
	}
	return ""
}

//2.设备
//web设备添加
type DeviceAddEvent struct {
	//设备id和imei
	DeviceId *DeviceId `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	//终端类型ID
	MdtTypeId uint32 `protobuf:"varint,2,opt,name=mdt_type_id,json=mdtTypeId,proto3" json:"mdt_type_id,omitempty"`
	//sim卡号
	Sim string `protobuf:"bytes,3,opt,name=sim,proto3" json:"sim,omitempty"`
	//设备名称
	ObjName string `protobuf:"bytes,4,opt,name=obj_name,json=objName,proto3" json:"obj_name,omitempty"`
	//用户ID
	Holdid               uint32   `protobuf:"varint,5,opt,name=holdid,proto3" json:"holdid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceAddEvent) Reset()         { *m = DeviceAddEvent{} }
func (m *DeviceAddEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceAddEvent) ProtoMessage()    {}
func (*DeviceAddEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{5}
}

func (m *DeviceAddEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceAddEvent.Unmarshal(m, b)
}
func (m *DeviceAddEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceAddEvent.Marshal(b, m, deterministic)
}
func (m *DeviceAddEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceAddEvent.Merge(m, src)
}
func (m *DeviceAddEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceAddEvent.Size(m)
}
func (m *DeviceAddEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceAddEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceAddEvent proto.InternalMessageInfo

func (m *DeviceAddEvent) GetDeviceId() *DeviceId {
	if m != nil {
		return m.DeviceId
	}
	return nil
}

func (m *DeviceAddEvent) GetMdtTypeId() uint32 {
	if m != nil {
		return m.MdtTypeId
	}
	return 0
}

func (m *DeviceAddEvent) GetSim() string {
	if m != nil {
		return m.Sim
	}
	return ""
}

func (m *DeviceAddEvent) GetObjName() string {
	if m != nil {
		return m.ObjName
	}
	return ""
}

func (m *DeviceAddEvent) GetHoldid() uint32 {
	if m != nil {
		return m.Holdid
	}
	return 0
}

//web设备删除
type DeviceDelEvent struct {
	//设备id和imei
	DeviceId             *DeviceId `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DeviceDelEvent) Reset()         { *m = DeviceDelEvent{} }
func (m *DeviceDelEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceDelEvent) ProtoMessage()    {}
func (*DeviceDelEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{6}
}

func (m *DeviceDelEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceDelEvent.Unmarshal(m, b)
}
func (m *DeviceDelEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceDelEvent.Marshal(b, m, deterministic)
}
func (m *DeviceDelEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceDelEvent.Merge(m, src)
}
func (m *DeviceDelEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceDelEvent.Size(m)
}
func (m *DeviceDelEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceDelEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceDelEvent proto.InternalMessageInfo

func (m *DeviceDelEvent) GetDeviceId() *DeviceId {
	if m != nil {
		return m.DeviceId
	}
	return nil
}

//web设备转移（objectid统一改为base库中的DeviceId）
type DeviceMoveEvent struct {
	//设备id和imei
	DeviceId *DeviceId `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	//新用户ID
	NewHoldId uint32 `protobuf:"varint,2,opt,name=new_hold_id,json=newHoldId,proto3" json:"new_hold_id,omitempty"`
	//旧用户ID
	OldHoldId            uint32   `protobuf:"varint,3,opt,name=old_hold_id,json=oldHoldId,proto3" json:"old_hold_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceMoveEvent) Reset()         { *m = DeviceMoveEvent{} }
func (m *DeviceMoveEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceMoveEvent) ProtoMessage()    {}
func (*DeviceMoveEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{7}
}

func (m *DeviceMoveEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceMoveEvent.Unmarshal(m, b)
}
func (m *DeviceMoveEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceMoveEvent.Marshal(b, m, deterministic)
}
func (m *DeviceMoveEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceMoveEvent.Merge(m, src)
}
func (m *DeviceMoveEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceMoveEvent.Size(m)
}
func (m *DeviceMoveEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceMoveEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceMoveEvent proto.InternalMessageInfo

func (m *DeviceMoveEvent) GetDeviceId() *DeviceId {
	if m != nil {
		return m.DeviceId
	}
	return nil
}

func (m *DeviceMoveEvent) GetNewHoldId() uint32 {
	if m != nil {
		return m.NewHoldId
	}
	return 0
}

func (m *DeviceMoveEvent) GetOldHoldId() uint32 {
	if m != nil {
		return m.OldHoldId
	}
	return 0
}

//设备激活
type DeviceActivateEvent struct {
	//设备id和imei
	DeviceId *DeviceId `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	//用户id
	Uid                  uint32   `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceActivateEvent) Reset()         { *m = DeviceActivateEvent{} }
func (m *DeviceActivateEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceActivateEvent) ProtoMessage()    {}
func (*DeviceActivateEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{8}
}

func (m *DeviceActivateEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceActivateEvent.Unmarshal(m, b)
}
func (m *DeviceActivateEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceActivateEvent.Marshal(b, m, deterministic)
}
func (m *DeviceActivateEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceActivateEvent.Merge(m, src)
}
func (m *DeviceActivateEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceActivateEvent.Size(m)
}
func (m *DeviceActivateEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceActivateEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceActivateEvent proto.InternalMessageInfo

func (m *DeviceActivateEvent) GetDeviceId() *DeviceId {
	if m != nil {
		return m.DeviceId
	}
	return nil
}

func (m *DeviceActivateEvent) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

//设备续费
type DeviceRenewalsEvent struct {
	//设备id和imei
	DeviceId *DeviceId `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	//续费周期：year 台年，month 台月，day 台天，long 终身
	Period string `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty"`
	//数量，代表 n年/n月/n天，终身就1个，不用多想了
	Times uint32 `protobuf:"varint,3,opt,name=times,proto3" json:"times,omitempty"`
	//计费规则，1按续费当天开始计费，2按过期日期开始计费（针对过期设备）
	BillingRule uint32 `protobuf:"varint,4,opt,name=billing_rule,json=billingRule,proto3" json:"billing_rule,omitempty"`
	//交易单号
	CustomerBillNo string `protobuf:"bytes,5,opt,name=customer_bill_no,json=customerBillNo,proto3" json:"customer_bill_no,omitempty"`
	//商户
	Merchant             string   `protobuf:"bytes,6,opt,name=merchant,proto3" json:"merchant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceRenewalsEvent) Reset()         { *m = DeviceRenewalsEvent{} }
func (m *DeviceRenewalsEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceRenewalsEvent) ProtoMessage()    {}
func (*DeviceRenewalsEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{9}
}

func (m *DeviceRenewalsEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceRenewalsEvent.Unmarshal(m, b)
}
func (m *DeviceRenewalsEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceRenewalsEvent.Marshal(b, m, deterministic)
}
func (m *DeviceRenewalsEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceRenewalsEvent.Merge(m, src)
}
func (m *DeviceRenewalsEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceRenewalsEvent.Size(m)
}
func (m *DeviceRenewalsEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceRenewalsEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceRenewalsEvent proto.InternalMessageInfo

func (m *DeviceRenewalsEvent) GetDeviceId() *DeviceId {
	if m != nil {
		return m.DeviceId
	}
	return nil
}

func (m *DeviceRenewalsEvent) GetPeriod() string {
	if m != nil {
		return m.Period
	}
	return ""
}

func (m *DeviceRenewalsEvent) GetTimes() uint32 {
	if m != nil {
		return m.Times
	}
	return 0
}

func (m *DeviceRenewalsEvent) GetBillingRule() uint32 {
	if m != nil {
		return m.BillingRule
	}
	return 0
}

func (m *DeviceRenewalsEvent) GetCustomerBillNo() string {
	if m != nil {
		return m.CustomerBillNo
	}
	return ""
}

func (m *DeviceRenewalsEvent) GetMerchant() string {
	if m != nil {
		return m.Merchant
	}
	return ""
}

//设备过期
type DeviceExpireEvent struct {
	//设备id和imei
	DeviceId *DeviceId `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	//服务过期时间
	ExpireTime           string   `protobuf:"bytes,2,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceExpireEvent) Reset()         { *m = DeviceExpireEvent{} }
func (m *DeviceExpireEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceExpireEvent) ProtoMessage()    {}
func (*DeviceExpireEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{10}
}

func (m *DeviceExpireEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceExpireEvent.Unmarshal(m, b)
}
func (m *DeviceExpireEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceExpireEvent.Marshal(b, m, deterministic)
}
func (m *DeviceExpireEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceExpireEvent.Merge(m, src)
}
func (m *DeviceExpireEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceExpireEvent.Size(m)
}
func (m *DeviceExpireEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceExpireEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceExpireEvent proto.InternalMessageInfo

func (m *DeviceExpireEvent) GetDeviceId() *DeviceId {
	if m != nil {
		return m.DeviceId
	}
	return nil
}

func (m *DeviceExpireEvent) GetExpireTime() string {
	if m != nil {
		return m.ExpireTime
	}
	return ""
}

//2.在离线状态
//设备上线、离线
type DeviceOnlineEvent struct {
	//设备id和imei
	DeviceId *DeviceId `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	//设备状态(0：离线，1：在线)
	ObjStatus uint32 `protobuf:"varint,2,opt,name=obj_status,json=objStatus,proto3" json:"obj_status,omitempty"`
	//网关地址
	GatewayIp string `protobuf:"bytes,3,opt,name=gateway_ip,json=gatewayIp,proto3" json:"gateway_ip,omitempty"`
	//网关端口
	GatewayPort uint32 `protobuf:"varint,4,opt,name=gateway_port,json=gatewayPort,proto3" json:"gateway_port,omitempty"`
	//网关类型
	GatewayType uint32 `protobuf:"varint,5,opt,name=gateway_type,json=gatewayType,proto3" json:"gateway_type,omitempty"`
	//设备ip
	DeviceIp string `protobuf:"bytes,6,opt,name=device_ip,json=deviceIp,proto3" json:"device_ip,omitempty"`
	//设备端口
	DevicePort uint32 `protobuf:"varint,7,opt,name=device_port,json=devicePort,proto3" json:"device_port,omitempty"`
	//更新时间
	UpdateTime           uint32   `protobuf:"varint,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceOnlineEvent) Reset()         { *m = DeviceOnlineEvent{} }
func (m *DeviceOnlineEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceOnlineEvent) ProtoMessage()    {}
func (*DeviceOnlineEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{11}
}

func (m *DeviceOnlineEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceOnlineEvent.Unmarshal(m, b)
}
func (m *DeviceOnlineEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceOnlineEvent.Marshal(b, m, deterministic)
}
func (m *DeviceOnlineEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceOnlineEvent.Merge(m, src)
}
func (m *DeviceOnlineEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceOnlineEvent.Size(m)
}
func (m *DeviceOnlineEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceOnlineEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceOnlineEvent proto.InternalMessageInfo

func (m *DeviceOnlineEvent) GetDeviceId() *DeviceId {
	if m != nil {
		return m.DeviceId
	}
	return nil
}

func (m *DeviceOnlineEvent) GetObjStatus() uint32 {
	if m != nil {
		return m.ObjStatus
	}
	return 0
}

func (m *DeviceOnlineEvent) GetGatewayIp() string {
	if m != nil {
		return m.GatewayIp
	}
	return ""
}

func (m *DeviceOnlineEvent) GetGatewayPort() uint32 {
	if m != nil {
		return m.GatewayPort
	}
	return 0
}

func (m *DeviceOnlineEvent) GetGatewayType() uint32 {
	if m != nil {
		return m.GatewayType
	}
	return 0
}

func (m *DeviceOnlineEvent) GetDeviceIp() string {
	if m != nil {
		return m.DeviceIp
	}
	return ""
}

func (m *DeviceOnlineEvent) GetDevicePort() uint32 {
	if m != nil {
		return m.DevicePort
	}
	return 0
}

func (m *DeviceOnlineEvent) GetUpdateTime() uint32 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

//4.行程状态
//行程启动、熄火
type DeviceTravelEvent struct {
	Travel               *TravelInfo `protobuf:"bytes,1,opt,name=travel,proto3" json:"travel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DeviceTravelEvent) Reset()         { *m = DeviceTravelEvent{} }
func (m *DeviceTravelEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceTravelEvent) ProtoMessage()    {}
func (*DeviceTravelEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{12}
}

func (m *DeviceTravelEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceTravelEvent.Unmarshal(m, b)
}
func (m *DeviceTravelEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceTravelEvent.Marshal(b, m, deterministic)
}
func (m *DeviceTravelEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceTravelEvent.Merge(m, src)
}
func (m *DeviceTravelEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceTravelEvent.Size(m)
}
func (m *DeviceTravelEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceTravelEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceTravelEvent proto.InternalMessageInfo

func (m *DeviceTravelEvent) GetTravel() *TravelInfo {
	if m != nil {
		return m.Travel
	}
	return nil
}

//5.告警状态
//告警开始、结束
type DeviceAlarmEvent struct {
	//告警流水号
	AlarmId uint64 `protobuf:"varint,1,opt,name=alarm_id,json=alarmId,proto3" json:"alarm_id,omitempty"`
	//设备ID
	ObjectId uint32 `protobuf:"varint,2,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	//告警类型ID
	AlarmTypeId uint32 `protobuf:"varint,3,opt,name=alarm_type_id,json=alarmTypeId,proto3" json:"alarm_type_id,omitempty"`
	//类型ID
	PolygonId uint32 `protobuf:"varint,4,opt,name=polygon_id,json=polygonId,proto3" json:"polygon_id,omitempty"`
	//状态(0：告警结束，1：告警开始)
	AlarmStatus          uint32   `protobuf:"varint,5,opt,name=alarm_status,json=alarmStatus,proto3" json:"alarm_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceAlarmEvent) Reset()         { *m = DeviceAlarmEvent{} }
func (m *DeviceAlarmEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceAlarmEvent) ProtoMessage()    {}
func (*DeviceAlarmEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{13}
}

func (m *DeviceAlarmEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceAlarmEvent.Unmarshal(m, b)
}
func (m *DeviceAlarmEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceAlarmEvent.Marshal(b, m, deterministic)
}
func (m *DeviceAlarmEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceAlarmEvent.Merge(m, src)
}
func (m *DeviceAlarmEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceAlarmEvent.Size(m)
}
func (m *DeviceAlarmEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceAlarmEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceAlarmEvent proto.InternalMessageInfo

func (m *DeviceAlarmEvent) GetAlarmId() uint64 {
	if m != nil {
		return m.AlarmId
	}
	return 0
}

func (m *DeviceAlarmEvent) GetObjectId() uint32 {
	if m != nil {
		return m.ObjectId
	}
	return 0
}

func (m *DeviceAlarmEvent) GetAlarmTypeId() uint32 {
	if m != nil {
		return m.AlarmTypeId
	}
	return 0
}

func (m *DeviceAlarmEvent) GetPolygonId() uint32 {
	if m != nil {
		return m.PolygonId
	}
	return 0
}

func (m *DeviceAlarmEvent) GetAlarmStatus() uint32 {
	if m != nil {
		return m.AlarmStatus
	}
	return 0
}

//6.行政区域变更
type DeviceRegionEvent struct {
	//设备id和imei
	DeviceId *DeviceId `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	//设备ID
	Objectid uint32 `protobuf:"varint,2,opt,name=objectid,proto3" json:"objectid,omitempty"`
	//省id
	OldProvinceId uint32 `protobuf:"varint,3,opt,name=old_province_id,json=oldProvinceId,proto3" json:"old_province_id,omitempty"`
	//省名称
	OldProvince string `protobuf:"bytes,4,opt,name=old_province,json=oldProvince,proto3" json:"old_province,omitempty"`
	//市id
	OldCityId uint32 `protobuf:"varint,5,opt,name=old_city_id,json=oldCityId,proto3" json:"old_city_id,omitempty"`
	//市名称
	OldCity string `protobuf:"bytes,6,opt,name=old_city,json=oldCity,proto3" json:"old_city,omitempty"`
	//区id
	OldRegionId uint32 `protobuf:"varint,7,opt,name=old_region_id,json=oldRegionId,proto3" json:"old_region_id,omitempty"`
	//区名称
	OldRegion string `protobuf:"bytes,8,opt,name=old_region,json=oldRegion,proto3" json:"old_region,omitempty"`
	//省id
	ProvinceId uint32 `protobuf:"varint,9,opt,name=province_id,json=provinceId,proto3" json:"province_id,omitempty"`
	//省名称
	Province string `protobuf:"bytes,10,opt,name=province,proto3" json:"province,omitempty"`
	//市id
	CityId uint32 `protobuf:"varint,11,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	//市名称
	City string `protobuf:"bytes,12,opt,name=city,proto3" json:"city,omitempty"`
	//区id
	RegionId uint32 `protobuf:"varint,13,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	//区名称
	Region               string   `protobuf:"bytes,14,opt,name=region,proto3" json:"region,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceRegionEvent) Reset()         { *m = DeviceRegionEvent{} }
func (m *DeviceRegionEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceRegionEvent) ProtoMessage()    {}
func (*DeviceRegionEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{14}
}

func (m *DeviceRegionEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceRegionEvent.Unmarshal(m, b)
}
func (m *DeviceRegionEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceRegionEvent.Marshal(b, m, deterministic)
}
func (m *DeviceRegionEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceRegionEvent.Merge(m, src)
}
func (m *DeviceRegionEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceRegionEvent.Size(m)
}
func (m *DeviceRegionEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceRegionEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceRegionEvent proto.InternalMessageInfo

func (m *DeviceRegionEvent) GetDeviceId() *DeviceId {
	if m != nil {
		return m.DeviceId
	}
	return nil
}

func (m *DeviceRegionEvent) GetObjectid() uint32 {
	if m != nil {
		return m.Objectid
	}
	return 0
}

func (m *DeviceRegionEvent) GetOldProvinceId() uint32 {
	if m != nil {
		return m.OldProvinceId
	}
	return 0
}

func (m *DeviceRegionEvent) GetOldProvince() string {
	if m != nil {
		return m.OldProvince
	}
	return ""
}

func (m *DeviceRegionEvent) GetOldCityId() uint32 {
	if m != nil {
		return m.OldCityId
	}
	return 0
}

func (m *DeviceRegionEvent) GetOldCity() string {
	if m != nil {
		return m.OldCity
	}
	return ""
}

func (m *DeviceRegionEvent) GetOldRegionId() uint32 {
	if m != nil {
		return m.OldRegionId
	}
	return 0
}

func (m *DeviceRegionEvent) GetOldRegion() string {
	if m != nil {
		return m.OldRegion
	}
	return ""
}

func (m *DeviceRegionEvent) GetProvinceId() uint32 {
	if m != nil {
		return m.ProvinceId
	}
	return 0
}

func (m *DeviceRegionEvent) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *DeviceRegionEvent) GetCityId() uint32 {
	if m != nil {
		return m.CityId
	}
	return 0
}

func (m *DeviceRegionEvent) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *DeviceRegionEvent) GetRegionId() uint32 {
	if m != nil {
		return m.RegionId
	}
	return 0
}

func (m *DeviceRegionEvent) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

//7.直播
//直播开始、结束
type DeviceLiveEvent struct {
	//状态(0：结束，1：开始)
	LiveStatus uint32 `protobuf:"varint,1,opt,name=live_status,json=liveStatus,proto3" json:"live_status,omitempty"`
	//rtmp server address
	ServerAddr string `protobuf:"bytes,2,opt,name=server_addr,json=serverAddr,proto3" json:"server_addr,omitempty"`
	//rtmp server port
	ServerPort uint32 `protobuf:"varint,3,opt,name=server_port,json=serverPort,proto3" json:"server_port,omitempty"`
	//client IP address
	Addr string `protobuf:"bytes,4,opt,name=addr,proto3" json:"addr,omitempty"`
	//nginx client id (displayed in log and stat)
	ClientId uint32 `protobuf:"varint,5,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	//application name
	App string `protobuf:"bytes,6,opt,name=app,proto3" json:"app,omitempty"`
	//client flash version
	FlashVer string `protobuf:"bytes,7,opt,name=flash_ver,json=flashVer,proto3" json:"flash_ver,omitempty"`
	//client swf url
	SwfUrl string `protobuf:"bytes,8,opt,name=swf_url,json=swfUrl,proto3" json:"swf_url,omitempty"`
	//tcUrl
	TcUrl string `protobuf:"bytes,9,opt,name=tc_url,json=tcUrl,proto3" json:"tc_url,omitempty"`
	//client page url
	PageUrl string `protobuf:"bytes,10,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	//stream name
	Name                 string   `protobuf:"bytes,11,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceLiveEvent) Reset()         { *m = DeviceLiveEvent{} }
func (m *DeviceLiveEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceLiveEvent) ProtoMessage()    {}
func (*DeviceLiveEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{15}
}

func (m *DeviceLiveEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceLiveEvent.Unmarshal(m, b)
}
func (m *DeviceLiveEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceLiveEvent.Marshal(b, m, deterministic)
}
func (m *DeviceLiveEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceLiveEvent.Merge(m, src)
}
func (m *DeviceLiveEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceLiveEvent.Size(m)
}
func (m *DeviceLiveEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceLiveEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceLiveEvent proto.InternalMessageInfo

func (m *DeviceLiveEvent) GetLiveStatus() uint32 {
	if m != nil {
		return m.LiveStatus
	}
	return 0
}

func (m *DeviceLiveEvent) GetServerAddr() string {
	if m != nil {
		return m.ServerAddr
	}
	return ""
}

func (m *DeviceLiveEvent) GetServerPort() uint32 {
	if m != nil {
		return m.ServerPort
	}
	return 0
}

func (m *DeviceLiveEvent) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

func (m *DeviceLiveEvent) GetClientId() uint32 {
	if m != nil {
		return m.ClientId
	}
	return 0
}

func (m *DeviceLiveEvent) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

func (m *DeviceLiveEvent) GetFlashVer() string {
	if m != nil {
		return m.FlashVer
	}
	return ""
}

func (m *DeviceLiveEvent) GetSwfUrl() string {
	if m != nil {
		return m.SwfUrl
	}
	return ""
}

func (m *DeviceLiveEvent) GetTcUrl() string {
	if m != nil {
		return m.TcUrl
	}
	return ""
}

func (m *DeviceLiveEvent) GetPageUrl() string {
	if m != nil {
		return m.PageUrl
	}
	return ""
}

func (m *DeviceLiveEvent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

//8.抓拍结果上报
//视频上报和图片上报
type DeviceMediaEvent struct {
	//设备事件信息
	Event                *DeviceEvent `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeviceMediaEvent) Reset()         { *m = DeviceMediaEvent{} }
func (m *DeviceMediaEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceMediaEvent) ProtoMessage()    {}
func (*DeviceMediaEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{16}
}

func (m *DeviceMediaEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceMediaEvent.Unmarshal(m, b)
}
func (m *DeviceMediaEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceMediaEvent.Marshal(b, m, deterministic)
}
func (m *DeviceMediaEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceMediaEvent.Merge(m, src)
}
func (m *DeviceMediaEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceMediaEvent.Size(m)
}
func (m *DeviceMediaEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceMediaEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceMediaEvent proto.InternalMessageInfo

func (m *DeviceMediaEvent) GetEvent() *DeviceEvent {
	if m != nil {
		return m.Event
	}
	return nil
}

//9.人脸识别结果
type DeviceRecognitionEvent struct {
	//设备id和imei
	DeviceId *DeviceId `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	//车辆ID
	VehicleId uint32 `protobuf:"varint,2,opt,name=vehicle_id,json=vehicleId,proto3" json:"vehicle_id,omitempty"`
	//图片识别结果 0:未识别、1:识别通过、2:识别未通过、3:识别异常
	RecognitionResult uint32 `protobuf:"varint,3,opt,name=recognition_result,json=recognitionResult,proto3" json:"recognition_result,omitempty"`
	//识别率分数
	RecognitionRate uint32 `protobuf:"varint,4,opt,name=recognition_rate,json=recognitionRate,proto3" json:"recognition_rate,omitempty"`
	//错误码
	ErrorCode            string   `protobuf:"bytes,5,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceRecognitionEvent) Reset()         { *m = DeviceRecognitionEvent{} }
func (m *DeviceRecognitionEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceRecognitionEvent) ProtoMessage()    {}
func (*DeviceRecognitionEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{17}
}

func (m *DeviceRecognitionEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceRecognitionEvent.Unmarshal(m, b)
}
func (m *DeviceRecognitionEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceRecognitionEvent.Marshal(b, m, deterministic)
}
func (m *DeviceRecognitionEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceRecognitionEvent.Merge(m, src)
}
func (m *DeviceRecognitionEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceRecognitionEvent.Size(m)
}
func (m *DeviceRecognitionEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceRecognitionEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceRecognitionEvent proto.InternalMessageInfo

func (m *DeviceRecognitionEvent) GetDeviceId() *DeviceId {
	if m != nil {
		return m.DeviceId
	}
	return nil
}

func (m *DeviceRecognitionEvent) GetVehicleId() uint32 {
	if m != nil {
		return m.VehicleId
	}
	return 0
}

func (m *DeviceRecognitionEvent) GetRecognitionResult() uint32 {
	if m != nil {
		return m.RecognitionResult
	}
	return 0
}

func (m *DeviceRecognitionEvent) GetRecognitionRate() uint32 {
	if m != nil {
		return m.RecognitionRate
	}
	return 0
}

func (m *DeviceRecognitionEvent) GetErrorCode() string {
	if m != nil {
		return m.ErrorCode
	}
	return ""
}

//10.acc状态变更
type DeviceAccStatusEvent struct {
	//设备ID
	ObjectId uint32 `protobuf:"varint,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	//acc状态（0：启动 1：熄火）
	AccStatus            uint32   `protobuf:"varint,2,opt,name=acc_status,json=accStatus,proto3" json:"acc_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceAccStatusEvent) Reset()         { *m = DeviceAccStatusEvent{} }
func (m *DeviceAccStatusEvent) String() string { return proto.CompactTextString(m) }
func (*DeviceAccStatusEvent) ProtoMessage()    {}
func (*DeviceAccStatusEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{18}
}

func (m *DeviceAccStatusEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceAccStatusEvent.Unmarshal(m, b)
}
func (m *DeviceAccStatusEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceAccStatusEvent.Marshal(b, m, deterministic)
}
func (m *DeviceAccStatusEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceAccStatusEvent.Merge(m, src)
}
func (m *DeviceAccStatusEvent) XXX_Size() int {
	return xxx_messageInfo_DeviceAccStatusEvent.Size(m)
}
func (m *DeviceAccStatusEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceAccStatusEvent.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceAccStatusEvent proto.InternalMessageInfo

func (m *DeviceAccStatusEvent) GetObjectId() uint32 {
	if m != nil {
		return m.ObjectId
	}
	return 0
}

func (m *DeviceAccStatusEvent) GetAccStatus() uint32 {
	if m != nil {
		return m.AccStatus
	}
	return 0
}

//三、卡事件
//1.卡实名
type SimRealnameEvent struct {
	//iccid号
	Iccid string `protobuf:"bytes,1,opt,name=iccid,proto3" json:"iccid,omitempty"`
	//手机号
	Mobile string `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	//身份证
	Idcard string `protobuf:"bytes,3,opt,name=idcard,proto3" json:"idcard,omitempty"`
	//手机号
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	//性别
	Sex uint32 `protobuf:"varint,5,opt,name=sex,proto3" json:"sex,omitempty"`
	//实名认证结果
	RealState            uint32   `protobuf:"varint,6,opt,name=real_state,json=realState,proto3" json:"real_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimRealnameEvent) Reset()         { *m = SimRealnameEvent{} }
func (m *SimRealnameEvent) String() string { return proto.CompactTextString(m) }
func (*SimRealnameEvent) ProtoMessage()    {}
func (*SimRealnameEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{19}
}

func (m *SimRealnameEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimRealnameEvent.Unmarshal(m, b)
}
func (m *SimRealnameEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimRealnameEvent.Marshal(b, m, deterministic)
}
func (m *SimRealnameEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimRealnameEvent.Merge(m, src)
}
func (m *SimRealnameEvent) XXX_Size() int {
	return xxx_messageInfo_SimRealnameEvent.Size(m)
}
func (m *SimRealnameEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SimRealnameEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SimRealnameEvent proto.InternalMessageInfo

func (m *SimRealnameEvent) GetIccid() string {
	if m != nil {
		return m.Iccid
	}
	return ""
}

func (m *SimRealnameEvent) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *SimRealnameEvent) GetIdcard() string {
	if m != nil {
		return m.Idcard
	}
	return ""
}

func (m *SimRealnameEvent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SimRealnameEvent) GetSex() uint32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *SimRealnameEvent) GetRealState() uint32 {
	if m != nil {
		return m.RealState
	}
	return 0
}

//2.卡续费
type SimRenewalsEvent struct {
	//iccid
	Iccid string `protobuf:"bytes,1,opt,name=iccid,proto3" json:"iccid,omitempty"`
	//续费金额（分）
	Amount uint32 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	//续费类型 1续费开通,2续费升级套餐,3续费叠加包
	RenewalsType uint32 `protobuf:"varint,3,opt,name=renewals_type,json=renewalsType,proto3" json:"renewals_type,omitempty"`
	//手机号
	Mobile string `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile,omitempty"`
	//套餐名称
	PackageName          string   `protobuf:"bytes,5,opt,name=package_name,json=packageName,proto3" json:"package_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimRenewalsEvent) Reset()         { *m = SimRenewalsEvent{} }
func (m *SimRenewalsEvent) String() string { return proto.CompactTextString(m) }
func (*SimRenewalsEvent) ProtoMessage()    {}
func (*SimRenewalsEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{20}
}

func (m *SimRenewalsEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimRenewalsEvent.Unmarshal(m, b)
}
func (m *SimRenewalsEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimRenewalsEvent.Marshal(b, m, deterministic)
}
func (m *SimRenewalsEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimRenewalsEvent.Merge(m, src)
}
func (m *SimRenewalsEvent) XXX_Size() int {
	return xxx_messageInfo_SimRenewalsEvent.Size(m)
}
func (m *SimRenewalsEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SimRenewalsEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SimRenewalsEvent proto.InternalMessageInfo

func (m *SimRenewalsEvent) GetIccid() string {
	if m != nil {
		return m.Iccid
	}
	return ""
}

func (m *SimRenewalsEvent) GetAmount() uint32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *SimRenewalsEvent) GetRenewalsType() uint32 {
	if m != nil {
		return m.RenewalsType
	}
	return 0
}

func (m *SimRenewalsEvent) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *SimRenewalsEvent) GetPackageName() string {
	if m != nil {
		return m.PackageName
	}
	return ""
}

//3.卡调档（删除）
type SimUpdateMealEvent struct {
	//iccid
	Iccid string `protobuf:"bytes,1,opt,name=iccid,proto3" json:"iccid,omitempty"`
	//旧资费名称
	OldRateName string `protobuf:"bytes,2,opt,name=old_rate_name,json=oldRateName,proto3" json:"old_rate_name,omitempty"`
	//新资费名称
	NewRateName          string   `protobuf:"bytes,3,opt,name=new_rate_name,json=newRateName,proto3" json:"new_rate_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimUpdateMealEvent) Reset()         { *m = SimUpdateMealEvent{} }
func (m *SimUpdateMealEvent) String() string { return proto.CompactTextString(m) }
func (*SimUpdateMealEvent) ProtoMessage()    {}
func (*SimUpdateMealEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{21}
}

func (m *SimUpdateMealEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimUpdateMealEvent.Unmarshal(m, b)
}
func (m *SimUpdateMealEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimUpdateMealEvent.Marshal(b, m, deterministic)
}
func (m *SimUpdateMealEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimUpdateMealEvent.Merge(m, src)
}
func (m *SimUpdateMealEvent) XXX_Size() int {
	return xxx_messageInfo_SimUpdateMealEvent.Size(m)
}
func (m *SimUpdateMealEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SimUpdateMealEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SimUpdateMealEvent proto.InternalMessageInfo

func (m *SimUpdateMealEvent) GetIccid() string {
	if m != nil {
		return m.Iccid
	}
	return ""
}

func (m *SimUpdateMealEvent) GetOldRateName() string {
	if m != nil {
		return m.OldRateName
	}
	return ""
}

func (m *SimUpdateMealEvent) GetNewRateName() string {
	if m != nil {
		return m.NewRateName
	}
	return ""
}

//4.机卡分离
type SimSeparateDeviceEvent struct {
	//imei
	Imei uint32 `protobuf:"varint,1,opt,name=imei,proto3" json:"imei,omitempty"`
	//iccid
	Iccid string `protobuf:"bytes,2,opt,name=iccid,proto3" json:"iccid,omitempty"`
	//手机号
	Mobile               string   `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimSeparateDeviceEvent) Reset()         { *m = SimSeparateDeviceEvent{} }
func (m *SimSeparateDeviceEvent) String() string { return proto.CompactTextString(m) }
func (*SimSeparateDeviceEvent) ProtoMessage()    {}
func (*SimSeparateDeviceEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{22}
}

func (m *SimSeparateDeviceEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimSeparateDeviceEvent.Unmarshal(m, b)
}
func (m *SimSeparateDeviceEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimSeparateDeviceEvent.Marshal(b, m, deterministic)
}
func (m *SimSeparateDeviceEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimSeparateDeviceEvent.Merge(m, src)
}
func (m *SimSeparateDeviceEvent) XXX_Size() int {
	return xxx_messageInfo_SimSeparateDeviceEvent.Size(m)
}
func (m *SimSeparateDeviceEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SimSeparateDeviceEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SimSeparateDeviceEvent proto.InternalMessageInfo

func (m *SimSeparateDeviceEvent) GetImei() uint32 {
	if m != nil {
		return m.Imei
	}
	return 0
}

func (m *SimSeparateDeviceEvent) GetIccid() string {
	if m != nil {
		return m.Iccid
	}
	return ""
}

func (m *SimSeparateDeviceEvent) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

//5.卡变更
//卡激活
type SimModifyEvent struct {
	//iccid
	Iccid string `protobuf:"bytes,1,opt,name=iccid,proto3" json:"iccid,omitempty"`
	//微信id
	WenxinId string `protobuf:"bytes,2,opt,name=wenxin_id,json=wenxinId,proto3" json:"wenxin_id,omitempty"`
	//手机号
	Mobile string `protobuf:"bytes,3,opt,name=mobile,proto3" json:"mobile,omitempty"`
	//1:流量不足停机，2：到期停机
	BusiType uint32 `protobuf:"varint,4,opt,name=busi_type,json=busiType,proto3" json:"busi_type,omitempty"`
	//扩展字段
	Param                string   `protobuf:"bytes,5,opt,name=param,proto3" json:"param,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SimModifyEvent) Reset()         { *m = SimModifyEvent{} }
func (m *SimModifyEvent) String() string { return proto.CompactTextString(m) }
func (*SimModifyEvent) ProtoMessage()    {}
func (*SimModifyEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_7872585e88629cc5, []int{23}
}

func (m *SimModifyEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SimModifyEvent.Unmarshal(m, b)
}
func (m *SimModifyEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SimModifyEvent.Marshal(b, m, deterministic)
}
func (m *SimModifyEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SimModifyEvent.Merge(m, src)
}
func (m *SimModifyEvent) XXX_Size() int {
	return xxx_messageInfo_SimModifyEvent.Size(m)
}
func (m *SimModifyEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SimModifyEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SimModifyEvent proto.InternalMessageInfo

func (m *SimModifyEvent) GetIccid() string {
	if m != nil {
		return m.Iccid
	}
	return ""
}

func (m *SimModifyEvent) GetWenxinId() string {
	if m != nil {
		return m.WenxinId
	}
	return ""
}

func (m *SimModifyEvent) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *SimModifyEvent) GetBusiType() uint32 {
	if m != nil {
		return m.BusiType
	}
	return 0
}

func (m *SimModifyEvent) GetParam() string {
	if m != nil {
		return m.Param
	}
	return ""
}

func init() {
	proto.RegisterEnum("mapgoo.event.EM_BUSSI_TYPE", EM_BUSSI_TYPE_name, EM_BUSSI_TYPE_value)
	proto.RegisterEnum("mapgoo.event.EM_SUB_TYPE", EM_SUB_TYPE_name, EM_SUB_TYPE_value)
	proto.RegisterType((*EventReq)(nil), "mapgoo.event.EventReq")
	proto.RegisterType((*UserRegEvent)(nil), "mapgoo.event.UserRegEvent")
	proto.RegisterType((*UserBindEvent)(nil), "mapgoo.event.UserBindEvent")
	proto.RegisterType((*DeviceSelfRegisterEvent)(nil), "mapgoo.event.DeviceSelfRegisterEvent")
	proto.RegisterType((*DeviceOldSelfRegisterEvent)(nil), "mapgoo.event.DeviceOldSelfRegisterEvent")
	proto.RegisterType((*DeviceAddEvent)(nil), "mapgoo.event.DeviceAddEvent")
	proto.RegisterType((*DeviceDelEvent)(nil), "mapgoo.event.DeviceDelEvent")
	proto.RegisterType((*DeviceMoveEvent)(nil), "mapgoo.event.DeviceMoveEvent")
	proto.RegisterType((*DeviceActivateEvent)(nil), "mapgoo.event.DeviceActivateEvent")
	proto.RegisterType((*DeviceRenewalsEvent)(nil), "mapgoo.event.DeviceRenewalsEvent")
	proto.RegisterType((*DeviceExpireEvent)(nil), "mapgoo.event.DeviceExpireEvent")
	proto.RegisterType((*DeviceOnlineEvent)(nil), "mapgoo.event.DeviceOnlineEvent")
	proto.RegisterType((*DeviceTravelEvent)(nil), "mapgoo.event.DeviceTravelEvent")
	proto.RegisterType((*DeviceAlarmEvent)(nil), "mapgoo.event.DeviceAlarmEvent")
	proto.RegisterType((*DeviceRegionEvent)(nil), "mapgoo.event.DeviceRegionEvent")
	proto.RegisterType((*DeviceLiveEvent)(nil), "mapgoo.event.DeviceLiveEvent")
	proto.RegisterType((*DeviceMediaEvent)(nil), "mapgoo.event.DeviceMediaEvent")
	proto.RegisterType((*DeviceRecognitionEvent)(nil), "mapgoo.event.DeviceRecognitionEvent")
	proto.RegisterType((*DeviceAccStatusEvent)(nil), "mapgoo.event.DeviceAccStatusEvent")
	proto.RegisterType((*SimRealnameEvent)(nil), "mapgoo.event.SimRealnameEvent")
	proto.RegisterType((*SimRenewalsEvent)(nil), "mapgoo.event.SimRenewalsEvent")
	proto.RegisterType((*SimUpdateMealEvent)(nil), "mapgoo.event.SimUpdateMealEvent")
	proto.RegisterType((*SimSeparateDeviceEvent)(nil), "mapgoo.event.SimSeparateDeviceEvent")
	proto.RegisterType((*SimModifyEvent)(nil), "mapgoo.event.SimModifyEvent")
}

func init() { proto.RegisterFile("mapgoo.paas.event.proto", fileDescriptor_7872585e88629cc5) }

var fileDescriptor_7872585e88629cc5 = []byte{
	// 2091 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x4b, 0x6f, 0xe3, 0xc8,
	0x11, 0x5e, 0xc9, 0x7a, 0x96, 0x2c, 0x0f, 0x87, 0xe3, 0x91, 0x5f, 0xeb, 0xf1, 0x2c, 0x03, 0x04,
	0x93, 0x05, 0xa2, 0x01, 0x76, 0x83, 0x04, 0xc8, 0x4d, 0xb6, 0x38, 0x13, 0x62, 0x25, 0xdb, 0x20,
	0x65, 0x27, 0xbb, 0x17, 0xa6, 0x45, 0xb6, 0xe5, 0x9e, 0xe1, 0x6b, 0x49, 0x4a, 0x1e, 0x9d, 0x73,
	0xcb, 0x21, 0x87, 0xdc, 0x03, 0xe4, 0x96, 0x5b, 0x12, 0x20, 0xb9, 0xe6, 0x3f, 0xe4, 0x07, 0xe4,
	0x9a, 0x43, 0xfe, 0x45, 0x50, 0xfd, 0x90, 0xa8, 0xc7, 0xcc, 0xc5, 0xd8, 0x83, 0x00, 0xd6, 0x57,
	0x55, 0xdd, 0xf5, 0xea, 0xae, 0x6a, 0xc1, 0x41, 0x48, 0x92, 0x49, 0x1c, 0x77, 0x13, 0x42, 0xb2,
	0x2e, 0x9d, 0xd1, 0x28, 0xef, 0x26, 0x69, 0x9c, 0xc7, 0xfa, 0xae, 0x64, 0x70, 0xec, 0xf8, 0xf5,
	0x84, 0xe5, 0xf7, 0xd3, 0x71, 0xd7, 0x8b, 0xc3, 0xd7, 0x93, 0x38, 0x20, 0xd1, 0xe4, 0x35, 0x17,
	0x1b, 0x4f, 0xef, 0x5e, 0x27, 0xf9, 0x3c, 0xa1, 0xd9, 0x6b, 0x12, 0xcd, 0xf1, 0x27, 0xd4, 0x8f,
	0x3b, 0xc5, 0x75, 0xc7, 0x24, 0xa3, 0x12, 0x3f, 0x2c, 0xe2, 0x79, 0x4a, 0x66, 0x34, 0xd8, 0xa6,
	0x11, 0xb0, 0x99, 0xd4, 0x30, 0xfe, 0x53, 0x82, 0x86, 0x89, 0x46, 0xd8, 0xf4, 0x7b, 0xfd, 0x18,
	0x1a, 0x19, 0xfd, 0x7e, 0x4a, 0x23, 0x8f, 0x1e, 0x96, 0x5e, 0x96, 0x5e, 0x55, 0xec, 0x05, 0xad,
	0xeb, 0x50, 0xc9, 0x59, 0x48, 0x0f, 0xcb, 0x1c, 0xe7, 0xdf, 0xfa, 0x2f, 0x01, 0xc6, 0xd3, 0x2c,
	0x63, 0x2e, 0xda, 0x78, 0xb8, 0xf3, 0xb2, 0xf4, 0x6a, 0xef, 0xab, 0x93, 0x6e, 0xd1, 0xb5, 0xae,
	0x39, 0x74, 0xcf, 0x6f, 0x1c, 0xc7, 0x72, 0x47, 0xdf, 0x5e, 0x9b, 0x76, 0x93, 0x8b, 0x8f, 0xe6,
	0x09, 0xd5, 0x7f, 0x06, 0x8d, 0x6c, 0x3a, 0x16, 0x9a, 0x15, 0xae, 0x79, 0xb4, 0xa1, 0xe9, 0xdc,
	0x9c, 0x0b, 0xbd, 0x7a, 0x36, 0x1d, 0x73, 0xad, 0x2e, 0xd4, 0x7d, 0x9a, 0x13, 0x16, 0x64, 0x87,
	0xd5, 0x97, 0xa5, 0x57, 0xad, 0xaf, 0xf6, 0xbb, 0x93, 0x38, 0x9e, 0x04, 0xd2, 0x9d, 0xf1, 0xf4,
	0xae, 0xdb, 0x8b, 0xe6, 0xb6, 0x12, 0x32, 0xfe, 0x59, 0x86, 0xdd, 0x9b, 0x8c, 0xa6, 0x36, 0x9d,
	0x70, 0x2f, 0xf5, 0x1f, 0x41, 0x3b, 0xa5, 0x13, 0x96, 0xe5, 0x34, 0x15, 0x7b, 0xa3, 0x9f, 0x6d,
	0x7b, 0x57, 0x81, 0x7c, 0x97, 0x03, 0xa8, 0x4f, 0x33, 0x9a, 0xba, 0xcc, 0xe7, 0xee, 0xb6, 0xed,
	0x1a, 0x92, 0x96, 0xaf, 0x9f, 0x40, 0x93, 0x33, 0x22, 0x12, 0x0a, 0x7f, 0xdb, 0x76, 0x03, 0x81,
	0x4b, 0x12, 0x52, 0xfd, 0x39, 0xd4, 0x48, 0x92, 0xa0, 0x12, 0xfa, 0xd3, 0xb4, 0xab, 0x24, 0x49,
	0x2c, 0x5f, 0x3f, 0x82, 0x06, 0xc2, 0x5c, 0xa5, 0xca, 0x19, 0x75, 0x92, 0x24, 0x5c, 0xe3, 0x08,
	0x1a, 0xd3, 0x88, 0xc5, 0x11, 0xea, 0xd4, 0x04, 0x8b, 0xd3, 0x96, 0xaf, 0x77, 0xa0, 0x16, 0xc6,
	0x63, 0x16, 0xd0, 0xc3, 0x3a, 0x67, 0x48, 0x4a, 0x3f, 0x83, 0x16, 0xae, 0x36, 0xa3, 0x69, 0xc6,
	0xe2, 0xe8, 0xb0, 0xc1, 0x99, 0x40, 0x92, 0xe4, 0x56, 0x20, 0xfa, 0x8f, 0xe1, 0x09, 0x89, 0xfc,
	0x34, 0x66, 0xbe, 0xab, 0x7c, 0x68, 0x72, 0xa1, 0xb6, 0x84, 0x6f, 0x16, 0xae, 0xc4, 0x89, 0x0a,
	0x02, 0x08, 0x57, 0x10, 0xc0, 0x00, 0x18, 0x7f, 0x29, 0x41, 0x1b, 0xe5, 0xce, 0x59, 0xe4, 0x8b,
	0xb8, 0x1d, 0x41, 0x83, 0x65, 0x2e, 0xf1, 0x43, 0x16, 0xf1, 0x90, 0x35, 0xec, 0x3a, 0xcb, 0x7a,
	0x48, 0x7e, 0x32, 0x5a, 0xf1, 0xf8, 0x1d, 0xf5, 0x72, 0x64, 0xc9, 0x68, 0x09, 0xc0, 0xf2, 0xb1,
	0x9e, 0x58, 0x48, 0x99, 0x8c, 0x15, 0xff, 0xd6, 0xf7, 0xa1, 0xca, 0x3c, 0x8f, 0xf9, 0x32, 0x4e,
	0x82, 0x58, 0xb5, 0x54, 0x84, 0x69, 0x69, 0xe9, 0x1f, 0xcb, 0x70, 0xd0, 0xa7, 0x33, 0xe6, 0x51,
	0x87, 0x06, 0x77, 0xb6, 0xcc, 0xa2, 0xb0, 0xf9, 0x17, 0xd0, 0xf4, 0x39, 0x0b, 0xf7, 0x2f, 0xf1,
	0x72, 0x39, 0xee, 0x6e, 0x9c, 0x1c, 0xa1, 0x6d, 0xf9, 0x76, 0xc3, 0x97, 0x5f, 0xe8, 0xd1, 0x7d,
	0x1c, 0xf8, 0xca, 0xa3, 0xa6, 0x5d, 0x43, 0xd2, 0xf2, 0xf5, 0x17, 0xd0, 0x0a, 0xfd, 0x9c, 0x5b,
	0xa2, 0x7c, 0x6a, 0xda, 0xcd, 0xd0, 0xcf, 0xd1, 0x96, 0x8f, 0x38, 0xc5, 0x33, 0xf6, 0x7e, 0x91,
	0xb1, 0xaa, 0xca, 0xd8, 0x7b, 0x95, 0xb1, 0x85, 0xd7, 0xb5, 0xa2, 0xd7, 0x5f, 0xc0, 0x6e, 0x9c,
	0x4e, 0x58, 0x44, 0x02, 0x97, 0x2f, 0x29, 0xca, 0xa0, 0x25, 0x31, 0x0b, 0x57, 0x3e, 0x00, 0xac,
	0x24, 0xf7, 0x3d, 0x9d, 0xcb, 0x3a, 0xc0, 0xfa, 0xfb, 0x86, 0xce, 0x8d, 0xdf, 0x95, 0xe1, 0x58,
	0xb8, 0x75, 0x15, 0xf8, 0x3f, 0x5c, 0x5c, 0xda, 0x9f, 0x8a, 0x4b, 0xbb, 0x18, 0x97, 0xb5, 0x18,
	0x54, 0x36, 0x62, 0xa0, 0xc1, 0x4e, 0xc6, 0x42, 0x19, 0x1c, 0xfc, 0xc4, 0xac, 0xb3, 0xcc, 0x0d,
	0x63, 0x9f, 0xdd, 0xcd, 0x79, 0x64, 0xda, 0x76, 0x83, 0x65, 0x43, 0x4e, 0xe3, 0x29, 0x8e, 0x53,
	0xb6, 0x11, 0x9d, 0x5d, 0x05, 0x62, 0x78, 0x8c, 0xbf, 0x96, 0x60, 0x4f, 0x38, 0xd1, 0xf3, 0xfd,
	0x47, 0x7a, 0xbe, 0xe6, 0x60, 0x79, 0xdd, 0x41, 0x69, 0xff, 0xce, 0xd2, 0xfe, 0x23, 0xc0, 0x5a,
	0x17, 0xc7, 0x5e, 0xf8, 0x5b, 0x8f, 0xc7, 0xef, 0xf8, 0xb1, 0xef, 0x00, 0x8f, 0x9b, 0xac, 0x73,
	0x19, 0x45, 0xe6, 0x1b, 0x96, 0xb2, 0xb7, 0x4f, 0x83, 0xc7, 0xd9, 0x6b, 0xfc, 0xbe, 0x04, 0x4f,
	0x04, 0x3c, 0x8c, 0x67, 0xf4, 0xf1, 0xce, 0x47, 0xf4, 0xc1, 0x5d, 0x4d, 0x7d, 0x33, 0xa2, 0x0f,
	0xbf, 0x5a, 0x64, 0x1f, 0x59, 0x8a, 0x2f, 0xb3, 0x1f, 0x07, 0xbe, 0xe0, 0x1b, 0xbf, 0x85, 0x67,
	0x32, 0x0f, 0x5e, 0xce, 0x66, 0x24, 0x7f, 0xac, 0x3d, 0x1a, 0xec, 0x4c, 0x17, 0x76, 0xe0, 0xa7,
	0xf1, 0xdf, 0x92, 0xda, 0xc2, 0xa6, 0x11, 0x7d, 0x20, 0x41, 0xf6, 0xc8, 0x2d, 0x3a, 0x50, 0x4b,
	0x68, 0xca, 0xe2, 0xc5, 0x05, 0x20, 0x28, 0x3c, 0xab, 0xd8, 0xf9, 0x32, 0xe9, 0xa4, 0x20, 0xf0,
	0xac, 0x8e, 0x59, 0x10, 0xb0, 0x68, 0xe2, 0xa6, 0xd3, 0x40, 0xe4, 0xbb, 0x6d, 0xb7, 0x24, 0x66,
	0x4f, 0x03, 0xaa, 0xbf, 0x02, 0xcd, 0x9b, 0x66, 0x79, 0x1c, 0xd2, 0xd4, 0x45, 0xdc, 0x8d, 0x62,
	0x59, 0xed, 0x7b, 0x0a, 0x3f, 0x67, 0x41, 0x70, 0x19, 0x63, 0x13, 0x0e, 0x69, 0xea, 0xdd, 0x93,
	0x28, 0x57, 0xb7, 0x9d, 0xa2, 0x8d, 0x10, 0x9e, 0x0a, 0x63, 0xcd, 0x0f, 0x09, 0x4b, 0x1f, 0x1b,
	0xc7, 0x33, 0x68, 0x51, 0xbe, 0x8e, 0xbb, 0xe8, 0xec, 0x4d, 0x1b, 0x04, 0x34, 0x62, 0x21, 0x35,
	0xfe, 0x56, 0x56, 0xfb, 0x5d, 0x45, 0x01, 0x8b, 0x1e, 0xbb, 0xdf, 0x29, 0x00, 0x1e, 0x89, 0x2c,
	0x27, 0xf9, 0x34, 0x53, 0x65, 0x14, 0x8f, 0xdf, 0x39, 0x1c, 0x40, 0xf6, 0x84, 0xe4, 0xf4, 0x81,
	0xcc, 0x5d, 0x96, 0xa8, 0xbb, 0x55, 0x22, 0x56, 0x82, 0x41, 0x56, 0xec, 0x24, 0x4e, 0x73, 0x15,
	0x64, 0x89, 0x5d, 0xc7, 0x69, 0x5e, 0x14, 0xe1, 0xcd, 0xa2, 0xba, 0x22, 0xc2, 0x5b, 0xfb, 0xc9,
	0xd2, 0xf8, 0x44, 0x85, 0x57, 0x1a, 0x98, 0x60, 0x40, 0x24, 0x93, 0xef, 0x50, 0xe7, 0xea, 0x20,
	0x20, 0xbe, 0xc1, 0x19, 0xb4, 0xa6, 0x89, 0x4f, 0x72, 0x19, 0xb1, 0x86, 0x10, 0x10, 0x10, 0x8f,
	0xd8, 0x37, 0x2a, 0x60, 0x23, 0x3e, 0x7c, 0x89, 0x80, 0xfd, 0x1c, 0x6a, 0x62, 0x16, 0x93, 0xd1,
	0x7a, 0xd1, 0xdd, 0x32, 0xa6, 0x09, 0x05, 0x2b, 0xba, 0x8b, 0x6d, 0x29, 0x6d, 0xfc, 0xbd, 0x04,
	0x9a, 0x3c, 0x38, 0x01, 0x49, 0xc3, 0x45, 0x23, 0x26, 0x48, 0xa9, 0xe0, 0x57, 0xec, 0x3a, 0xa7,
	0xd7, 0xfb, 0x6d, 0x79, 0xad, 0xdf, 0x1a, 0xd0, 0x16, 0x7a, 0xab, 0x97, 0x74, 0x8b, 0x83, 0xf2,
	0x16, 0x3b, 0x05, 0x48, 0xe2, 0x60, 0x3e, 0x11, 0x13, 0x89, 0x08, 0x70, 0x53, 0x22, 0x16, 0x6f,
	0x49, 0x62, 0x09, 0x99, 0xc1, 0x6a, 0x61, 0x05, 0x91, 0x43, 0xe3, 0xdf, 0x3b, 0x2a, 0x00, 0xd8,
	0x72, 0xe2, 0xe8, 0x91, 0x15, 0x73, 0x0c, 0xd2, 0x81, 0x75, 0x87, 0x98, 0x8f, 0x83, 0x0e, 0x5e,
	0x38, 0x49, 0x1a, 0xcf, 0x58, 0xe4, 0x15, 0x5c, 0x6a, 0xc7, 0x81, 0x7f, 0x2d, 0x51, 0x61, 0x75,
	0x51, 0x4e, 0x5e, 0xc6, 0xad, 0x82, 0x90, 0xba, 0xc0, 0x3c, 0x96, 0xcf, 0xdd, 0xc5, 0xad, 0x8c,
	0x17, 0xd8, 0x05, 0xcb, 0xe7, 0x62, 0x84, 0x53, 0x7c, 0x35, 0xa7, 0x49, 0x26, 0x86, 0x15, 0x59,
	0x29, 0xf7, 0x16, 0x95, 0x45, 0xd1, 0xe0, 0x7a, 0x22, 0x02, 0xb2, 0xee, 0x17, 0x32, 0xb2, 0x55,
	0x37, 0x17, 0x02, 0x58, 0x54, 0x45, 0x27, 0x9a, 0xa2, 0xa8, 0x92, 0xa5, 0x07, 0xc7, 0xd0, 0x58,
	0x58, 0x0f, 0xa2, 0x64, 0x15, 0x8d, 0x2d, 0x59, 0x99, 0xdd, 0x12, 0xcd, 0xc4, 0x13, 0x36, 0xeb,
	0x50, 0xe1, 0xf6, 0xee, 0x8a, 0x51, 0x04, 0xbf, 0xb1, 0x40, 0x96, 0x86, 0xb6, 0x45, 0x3c, 0x53,
	0x65, 0x65, 0x07, 0x6a, 0xd2, 0xc2, 0x3d, 0x71, 0xe5, 0x09, 0xca, 0xf8, 0x47, 0x59, 0xb5, 0x92,
	0x01, 0x53, 0xad, 0xe4, 0x0c, 0x5a, 0xf8, 0x86, 0x50, 0x85, 0x20, 0x66, 0x68, 0x40, 0x48, 0x9e,
	0xe5, 0x33, 0x68, 0x65, 0x34, 0x9d, 0xd1, 0xd4, 0x25, 0xbe, 0x9f, 0xaa, 0xab, 0x45, 0x40, 0x3d,
	0xdf, 0x4f, 0x0b, 0x02, 0xfc, 0xa8, 0x89, 0xcc, 0x49, 0x01, 0x7e, 0xd4, 0x74, 0xa8, 0x70, 0x55,
	0x39, 0x4a, 0xe1, 0x37, 0xda, 0xef, 0x05, 0x8c, 0x46, 0xf9, 0x32, 0x4b, 0x0d, 0x01, 0x88, 0xae,
	0x40, 0x12, 0x75, 0xa6, 0xf1, 0x13, 0xc5, 0xef, 0x02, 0x92, 0xdd, 0xe3, 0xdc, 0x21, 0x27, 0x84,
	0x06, 0x07, 0x6e, 0x69, 0x8a, 0x81, 0xcb, 0x1e, 0xee, 0xdc, 0x69, 0x1a, 0xa8, 0xe1, 0x29, 0x7b,
	0xb8, 0xbb, 0x49, 0x03, 0x1c, 0xe3, 0x73, 0x8f, 0xe3, 0x62, 0x6e, 0xae, 0xe6, 0x1e, 0xc2, 0x47,
	0xd0, 0x48, 0xc8, 0x84, 0x72, 0x86, 0x48, 0x42, 0x1d, 0x69, 0x64, 0xe9, 0x50, 0xe1, 0x6d, 0xbe,
	0x25, 0x4c, 0xc5, 0x6f, 0xe3, 0xad, 0x3a, 0xba, 0x43, 0xea, 0x33, 0x22, 0xa2, 0xf6, 0x35, 0x54,
	0xf9, 0xd3, 0x46, 0x1e, 0x81, 0xd3, 0xee, 0xc6, 0x9b, 0x4c, 0x5e, 0xee, 0xfc, 0x3d, 0x26, 0x64,
	0x8d, 0xff, 0x95, 0xa0, 0xa3, 0x4e, 0x94, 0x17, 0x4f, 0x22, 0x96, 0x3f, 0xfe, 0x58, 0x9d, 0x02,
	0xcc, 0xe8, 0x3d, 0xf3, 0x82, 0xe2, 0x30, 0x23, 0x11, 0xcb, 0xd7, 0x7f, 0x0a, 0x7a, 0xba, 0xdc,
	0xcb, 0x4d, 0x69, 0x36, 0x0d, 0x54, 0x8a, 0x9e, 0x16, 0x38, 0x36, 0x67, 0xe8, 0x3f, 0x01, 0x6d,
	0x45, 0x9c, 0xe4, 0xaa, 0x03, 0x3e, 0x29, 0x0a, 0x93, 0x9c, 0xe2, 0xc6, 0x34, 0x4d, 0xe3, 0xd4,
	0xf5, 0x62, 0x5f, 0xbd, 0x86, 0x9a, 0x1c, 0xb9, 0x88, 0x7d, 0x6a, 0xd8, 0xb0, 0xaf, 0x06, 0x05,
	0x4f, 0x14, 0x92, 0x70, 0x74, 0xe5, 0x62, 0x2b, 0xad, 0x5d, 0x6c, 0xa7, 0x00, 0xc4, 0xf3, 0xd6,
	0xba, 0x0a, 0x51, 0x0b, 0x18, 0x7f, 0x2a, 0x81, 0xe6, 0xb0, 0xd0, 0xa6, 0x24, 0xc0, 0xc4, 0x88,
	0x05, 0x17, 0x23, 0x77, 0xa9, 0x38, 0x72, 0x2f, 0xdf, 0x5c, 0xe5, 0x95, 0x37, 0x57, 0x07, 0x6a,
	0xcc, 0xf7, 0x48, 0xaa, 0x06, 0x7e, 0x49, 0x2d, 0xf2, 0x5e, 0x59, 0xe6, 0x9d, 0x0f, 0x82, 0xf4,
	0x83, 0x2c, 0x4e, 0xfc, 0x44, 0xfb, 0x52, 0x4a, 0x02, 0x6e, 0x20, 0x95, 0x93, 0x6c, 0x13, 0x11,
	0x34, 0x90, 0x1a, 0x7f, 0x56, 0xf6, 0x15, 0xe7, 0x96, 0x8f, 0xda, 0x47, 0xc2, 0x78, 0x1a, 0xe5,
	0x6a, 0xfa, 0x16, 0x94, 0x78, 0xd3, 0x0a, 0xf5, 0xe5, 0x4b, 0x9c, 0xbf, 0x69, 0x05, 0xc8, 0x1b,
	0xdf, 0xd2, 0xb9, 0xca, 0x8a, 0x73, 0x5f, 0xc0, 0x6e, 0x42, 0xbc, 0xf7, 0x58, 0xda, 0x85, 0x27,
	0x6a, 0x4b, 0x62, 0x38, 0xaf, 0x1a, 0x29, 0xe8, 0x0e, 0x0b, 0x6f, 0x78, 0x97, 0x1b, 0x52, 0x12,
	0x7c, 0xca, 0x46, 0x75, 0x1f, 0x62, 0x8f, 0xe4, 0xeb, 0x95, 0x17, 0xd7, 0x2d, 0x56, 0x00, 0x9f,
	0x7f, 0x0d, 0x68, 0xe3, 0x3c, 0xb9, 0x94, 0x11, 0x61, 0xc5, 0x21, 0x53, 0xc9, 0x18, 0xdf, 0x41,
	0xc7, 0x61, 0xa1, 0x43, 0x13, 0x82, 0x62, 0x85, 0x73, 0xb1, 0x78, 0x63, 0x89, 0x3a, 0x58, 0x7b,
	0x38, 0x96, 0xb7, 0xe7, 0x73, 0xa7, 0xe8, 0xb2, 0xf1, 0x87, 0x12, 0xec, 0x39, 0x2c, 0x14, 0x6f,
	0x89, 0x4f, 0x39, 0x73, 0x02, 0xcd, 0x07, 0x1a, 0x7d, 0x60, 0xd1, 0xf2, 0x25, 0xd8, 0x10, 0x80,
	0xf5, 0xd1, 0xd5, 0x51, 0x69, 0x3c, 0x55, 0xff, 0x89, 0x88, 0x73, 0xd0, 0x40, 0x80, 0x67, 0x61,
	0x1f, 0xaa, 0xe8, 0x91, 0x7a, 0xe9, 0x08, 0xe2, 0xcb, 0x04, 0xda, 0x2b, 0xff, 0x93, 0xe8, 0x87,
	0xb0, 0xaf, 0x00, 0xa4, 0xdd, 0xbe, 0xf9, 0xa6, 0x77, 0x33, 0x18, 0x69, 0x9f, 0xe9, 0xcf, 0xe1,
	0xe9, 0x0a, 0xe7, 0xc6, 0x31, 0x6d, 0xad, 0xa4, 0x1f, 0xc0, 0xb3, 0x35, 0x85, 0x5b, 0xeb, 0xc2,
	0xd4, 0xca, 0x1b, 0xf2, 0x17, 0x3d, 0xbb, 0xaf, 0xed, 0x7c, 0xf9, 0xaf, 0x2a, 0xb4, 0x0a, 0x7f,
	0xb0, 0xe8, 0x1d, 0xd0, 0x05, 0xb9, 0xb6, 0xdd, 0x2a, 0x8e, 0x9b, 0xd9, 0xe6, 0xdb, 0xc5, 0x7e,
	0x45, 0xfc, 0xdc, 0xba, 0xec, 0x6b, 0x65, 0xfd, 0x73, 0x38, 0x5c, 0x59, 0x08, 0xcd, 0x70, 0xcc,
	0xc1, 0x1b, 0x54, 0xdb, 0xd1, 0xcf, 0xe0, 0x64, 0x83, 0x7b, 0x35, 0xe8, 0x2b, 0x81, 0x8a, 0x74,
	0x7c, 0x55, 0xa0, 0xd7, 0xef, 0x6b, 0xd5, 0xad, 0x9c, 0xbe, 0x39, 0xd0, 0x6a, 0xfa, 0x11, 0x3c,
	0xdf, 0xe0, 0x0c, 0xaf, 0x6e, 0x4d, 0xad, 0xae, 0x9f, 0xc2, 0xd1, 0xe6, 0x72, 0x17, 0x23, 0xeb,
	0xb6, 0x37, 0x32, 0xb5, 0xc6, 0x56, 0xb6, 0x6d, 0x5e, 0x9a, 0xbf, 0xee, 0x0d, 0x1c, 0xad, 0xa9,
	0x9f, 0xc0, 0xc1, 0x06, 0xdb, 0xfc, 0xcd, 0xb5, 0x65, 0x9b, 0x1a, 0x6c, 0x65, 0x5e, 0x5d, 0x0e,
	0xac, 0x4b, 0x53, 0x6b, 0x6d, 0x65, 0x8e, 0xec, 0xde, 0xad, 0x39, 0xd0, 0x76, 0xf5, 0x63, 0xe8,
	0x6c, 0x1a, 0x35, 0xe8, 0xd9, 0x43, 0xad, 0xbd, 0x55, 0xd1, 0x36, 0xdf, 0x5a, 0x57, 0x97, 0xda,
	0xde, 0x56, 0x47, 0x07, 0xd6, 0xad, 0xa9, 0x3d, 0xd9, 0xba, 0xe6, 0xd0, 0xec, 0x5b, 0x3d, 0x4d,
	0xd3, 0x5f, 0xc2, 0xe7, 0x5b, 0xd6, 0xbc, 0xb8, 0x7a, 0x7b, 0x69, 0x8d, 0x70, 0xe1, 0xa7, 0xfa,
	0x0b, 0x38, 0xde, 0x12, 0xa6, 0x0b, 0x67, 0xd4, 0x1b, 0xdd, 0x38, 0x9a, 0xbe, 0xb6, 0xba, 0x63,
	0x0d, 0x6d, 0xb3, 0x37, 0xb8, 0xec, 0x0d, 0x4d, 0xed, 0xd9, 0x36, 0x9e, 0x0c, 0xe0, 0xfe, 0x5a,
	0x31, 0x38, 0xd6, 0xf0, 0xe6, 0xba, 0xdf, 0x1b, 0x99, 0x43, 0xb3, 0x37, 0xd0, 0x9e, 0xaf, 0xd9,
	0xe5, 0x58, 0x43, 0xc7, 0xbc, 0xee, 0xd9, 0xbd, 0x91, 0x29, 0x8b, 0xb7, 0xb3, 0x96, 0x73, 0xc7,
	0x1a, 0x0e, 0xaf, 0xfa, 0xd6, 0x9b, 0x6f, 0xb5, 0x83, 0xf3, 0xea, 0x77, 0x3b, 0x24, 0x61, 0xd7,
	0x9f, 0x5d, 0x97, 0xae, 0xcb, 0xd7, 0x3b, 0xe3, 0x1a, 0xff, 0xf7, 0xef, 0xeb, 0xff, 0x07, 0x00,
	0x00, 0xff, 0xff, 0x42, 0x4d, 0x9f, 0xc0, 0x70, 0x15, 0x00, 0x00,
}
